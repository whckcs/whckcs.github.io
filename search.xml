<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>什么是自传播？</title>
    <url>/posts/64661.html</url>
    <content><![CDATA[<h1 id="1-自传播"><a href="#1-自传播" class="headerlink" title="1.自传播"></a>1.自传播</h1><h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><p>朱百宁认为：“自传播指依靠事件、产品或推广活动中种种吸引人、触动人的因素，来引起个人或机构的自发、多级的传播”。传播学者黄估认为：“自传播是指不需要信息制造者亲自传播，信息接受者主动成为信息的接力传播者，（是）信息自发传播的传播形式”。两位学者的定义焦点有异，但都强调自传播的“自发性”。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>不同于传统媒体垂直式的信息传播方式， 新媒体环境下的大众自传播呈现出水平延伸的网状结构模式。 每一个网民都是P2P网络中的 一个节点， 信息在经由这些网民节点时，会因为受到处于不同社会阶层的网民的思考模式、 心理诉求、文化素养、社会背景等因素的影响而发生改变。 网民基于自己的判断和认知对信息进行选择性注意、 选择性理解和选择性记忆后，对信息进行改写、 再造，然后以自己为中心将信息再传播，成为某一信息辐射范围内的信息源。</p>
<h2 id="自传播的基础"><a href="#自传播的基础" class="headerlink" title="自传播的基础"></a>自传播的基础</h2><p>信息主题本身的需求性和共鸣性是引发信息自传播的基础。信息本身的知识性和社交性是公众对社会信息的主要关注点。公众需要借助于社会化的信息平台满足自己日常的知识资料的积累，同时接收信息时间的碎片化也要求信息文本主题的大众性与社会化特色。这必然决定了能够引发公众关注的信息从主题内容上应该是大众化、普适化的，能够为大众所认同或产生共情效应的信息主题。</p>
<h2 id="自传播的核心"><a href="#自传播的核心" class="headerlink" title="自传播的核心"></a>自传播的核心</h2><p>信息文本仿效的难易程度是信息自传播的核心。模仿行为是人类社会化行为的基础，也是社交平台信息自传播早期的重要表现方式。可以说，单一信息在社交平台传播的早期互动样貌是从最先发布的那条信息中的模仿开始的。我们可以追溯出这样的信息自传播脉络：原始信息发布一被“自传播点击中”一选取“自传播点”一分享或加工“自传播点”。在这个路线图中，当信息消费者对信息中的某个自传播点产生共鸣后，模仿的行为和心理就会随之表现出来。前一小节强调了信息文本的主题要能够产生共鸣效应，这是一种心理认知状态，但真正信息消费者是否能够随之表现出信息的分享行为，及分享的内容是否和信息本身的主题相关，还要有赖于信息文本的“自传播点”选取的难易程度。能够激发信息消费者积极参与并乐于分享的文本其自身一定是清晰的、被易于操作的“自传播点”。</p>
<h2 id="自传播的四个类型："><a href="#自传播的四个类型：" class="headerlink" title="自传播的四个类型："></a>自传播的四个类型：</h2><ul>
<li>基于内容的传播</li>
<li>基于价值的传播</li>
<li>基于利益的传播</li>
<li>基于人际关系的传播</li>
</ul>
]]></content>
      <tags>
        <tag>传播学</tag>
      </tags>
  </entry>
  <entry>
    <title>杂念</title>
    <url>/posts/53875.html</url>
    <content><![CDATA[<h1 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h1><p>我已经记不起来当初为什么要突发奇想建一个博客的，然后在折腾了不少时间后，我的域名到期，博客文件也随着电脑的更换而灰飞烟灭，剩余在github里的文件我已经无力去维护。</p>
<p>直到前不久，老师布置了一个作业，让我们找几个网页设计的例子，我翻阅了不少人的博客之后，还是没忍住翻出了一直在收藏夹里吃灰的教程，短暂的折腾后，就有了现在这个简简单单的网页，然后我重新购买了一个比较简短的域名，便于记忆。</p>
<p>转眼来到了大四，说实话，我现在还不知道我高中三年和大学三年是怎么过去的，我一直在折腾一些乱七八糟的东西。</p>
<h1 id="TA们"><a href="#TA们" class="headerlink" title="TA们"></a>TA们</h1><p>我想起了y，他也喜欢折腾东西，各种航模、电子产品或者那会儿我们认为的一切很酷的东西，我不知道他们哪里来这么多的时间，因为那会儿家长只会让我们看书，无论课本还是课外书。他去了某电子科大，好像是个985，我不知道，我们没联系了，但我甚至记得他瘦削而又沉默寡言的样子。</p>
<p>还有z，我爸认识她爸，虽然我不清楚是为什么，好像他们是高中同学。我爸总是认识很多人，但至今我仍然没搞清楚他们的关系。z在灰色的高中里也许是不少自带涂料的人物之一，至少在我看来是如此。<br>她可能就是傻白甜的代表，当然不是说真的傻，至少当你第一眼见到她时，会立刻被她的咧嘴的微笑所吸引。也许我喜欢过她，我不知道。</p>
<p>w的名字很有趣，听上去你会联想到一个精明能干的高个子女孩子，随时准备一本正经的和你讨论数学题或者量子力学。但当我课间操看清她本人时，我认为她也许是一个不谙世事的富家女孩，只是用清澈透明的大眼睛看着你，手里抱着《高考必背3500词》，关于她的眼睛，我敢打赌她绝不是故意的，也许生来如此。第一次见到她是在月考，我们都在最后一排，我还在为忘带擦头的事发愁，她在安检过后走了过来：“同学，可以让一下我吗？”我有点烦躁地抬起了头，直到视线和她那没有任何恶意的眼神相交汇，那绝对是我最狼狈的时刻，我甚至忘记了起身，一个劲地往前缩凳子，直到她艰难地从凳子和墙之间夹了过去。整场考试我都在想为我的行为道歉，我强迫我去看试卷上的题目，直到最后的铃声响起。</p>
<h1 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h1><p>刚刚铃响了，但我完全想不起高中的铃声。自习室窗外，不少女孩子并排走着，微弱的灯光打在跑者的身上。不少人认为高中的铃声是催魂曲，但比起现在，我仍认为那时的铃声意义非凡。c和我说她绝对不会再回去过一次高三，我想也是，虽然我从进校门的那一刻就一股脑地想着复读，我联系了实验中学的老师，还有2年前上了北大的L，我折腾了半天，结果也差那最后的勇气。一开始我就知道这样的结局，心理学上有个理论叫自证预言：我们会控制事件的发生，从而确保预言会成真，我们会确保自己的世界和预期的一样。也许这就是自证预言在作祟吧。</p>
<h1 id="高考"><a href="#高考" class="headerlink" title="高考"></a>高考</h1><p>说来也巧，高考结束完的那一天，我遇到了w。考完英语后，我和舍友第一个从考场的校门走了出来，一大堆的家长端着各式各样的表情看向我们，然后又迅速看向校门，“别等了，反正还要回学校”，我心里充斥着考完后的烦躁，没错，我没有任何的喜悦，只是很烦。也许这就是高考后遗症。“妈的”，我小声嘀咕道。我们艰难地从人群中穿过，每走一步，都会有一大堆家长盯着你看，好像必须确认一下他们的孩子没有走丢。我们上了大巴车，和往常不一样，大巴车并没有很拥挤，只是规整地坐着高考完的学生，我没有看向他们，但我同样感受不到高考后的喜悦。大巴车从后门进入学校，从这里到教室有一条每个高中都会有的林荫小道，道路旁插着每一届文理科状元的光荣榜，直到我们的教学楼，我遇见一个同学，他说什么我已经忘记了，我只知道听他说完后，我直接扭头走向了后大门。我租的房子与学校隔着一条小吃街，虽然卫生不怎么样，但至少陪伴了我三年，特别是高三。w迎面走来，还有一个瘦高的男生，我和她对视了一眼，若无其事地继续向前。我知道这是最后一次见到她了。</p>
<p><a href="https://imgse.com/i/xrbt0A"><img src="https://s1.ax1x.com/2022/10/18/xrbt0A.jpg" alt="xrbt0A.jpg" loading="lazy"></a></p>
<ul>
<li>此文章为随笔纪念，如有雷同，纯属巧合。</li>
</ul>
]]></content>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo自建博客进阶和优化</title>
    <url>/posts/27040.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>作者水平有限，更多信息可以参考<a href="https://hexo.io/zh-cn/docs/">Hexo文档</a>，若有问题可以在<a href="https://github.com/hexojs/hexo/issues">Hexo github</a>进行浏览和提问，或者参考相关主题文档和询问主题作者。搭建教程参考：<a href="https://whck.cc/posts/58460.html">利用hexo自建博客指南</a></p>
<h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="安装cnpm提升安装速度"><a href="#安装cnpm提升安装速度" class="headerlink" title="安装cnpm提升安装速度"></a>安装cnpm提升安装速度</h2><p>cnpm是阿里在国内搞的npm镜像，可以有效提升安装速度。</p>
<ul>
<li><p>安装cnpm</p>
<pre class="line-numbers language-none"><code class="language-none">npm install -g cnpm --registry=https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>测试是否成功：</p>
<pre class="line-numbers language-none"><code class="language-none">cnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装好后可以用cnpm代替npm执行</p>
<h2 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h2><blockquote>
<p>通过压缩代码来提升资源访问速度</p>
</blockquote>
</li>
<li><p>安装hexo-neat插件</p>
<pre class="line-numbers language-none"><code class="language-none">npm install hexo-neat --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>在配置文件加入配置：</p>
<pre class="line-numbers language-none"><code class="language-none">neat_enable: true
neat_html:
  enable: true
  exclude:
neat_css:
  enable: true
  exclude:
    - '*.min.css'
neat_js:
  enable: true
  mangle: true
  output:
  compress:
  exclude:
    - '*.min.js'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>此方法有一定缺陷:压缩MD文件会使代码块消失以及会删除全角空格，根据具体情况调整和使用</p>
</blockquote>
</li>
</ul>
<h2 id="图片加载速度优化"><a href="#图片加载速度优化" class="headerlink" title="图片加载速度优化"></a>图片加载速度优化</h2><blockquote>
<p>预加载：预加载就是进入项目前提前加载资源，避免在项目中加载缓慢，影响用户体验。预加载会增加服务器压力。</p>
</blockquote>
<blockquote>
<p>懒加载一般是当图片滚动进可视窗口内才加载图片，可视窗口之外的图片则不加载。懒加载可以减轻服务器压力。</p>
</blockquote>
<ul>
<li>因此使用懒加载可以提升访问速度,安装图片懒加载插件： hexo-lazyload-image<pre class="line-numbers language-none"><code class="language-none">hexo-lazyload-image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
然后在Hexo配置文件加入以下代码:<pre class="line-numbers language-none"><code class="language-none">lazyload:
  enable: true 
  onlypost: false  # 是否只对文章的图片做懒加载
  loadingImg: # eg ./images/loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="CDN加速："><a href="#CDN加速：" class="headerlink" title="CDN加速："></a>CDN加速：</h2><blockquote>
<p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。</p>
</blockquote>
</li>
<li>格式：<pre class="line-numbers language-none"><code class="language-none">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>这个不止可以作用于图片，可以像这样把所有的css、js等文件的加载路径都修改下,其他文件例如css,js等文件也可以参考上面格式进行修改。以提高访问速度。</p>
</blockquote>
</li>
</ul>
<h1 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h1><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>还没有进行注册的时候你的域名格式（xxx.github.io）会比较长且不容易记住，绑定一个域名便于记忆和访问。</p>
<p>进入<a href="https://www.aliyun.com/">阿里云官网</a>，并注册一个账号。</p>
<p>进入域名注册界面<br><a href="https://imgse.com/i/xrbdtP"><img src="https://s1.ax1x.com/2022/10/18/xrbdtP.png" alt="xrbdtP.png" loading="lazy"></a><br>输入你想要的域名，选择后缀并查询</p>
<blockquote>
<p>.com.cn等后缀非常贵，建议选择.cc等容易记住且较短的后缀，也比较便宜。第一次购买域名会便宜很多，有一些域名第一年只需要1元。</p>
</blockquote>
<p>选择你想要的域名进行购买<br><a href="https://imgse.com/i/xrbwff"><img src="https://s1.ax1x.com/2022/10/18/xrbwff.png" alt="xrbwff.png" loading="lazy"></a></p>
<blockquote>
<p>第一次购买需要实名认证，一般时间不会很久</p>
</blockquote>
<h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>购买域名进入控制台找到你的域名，点击解析</p>
<p><a href="https://imgse.com/i/xrbD1S"><img src="https://s1.ax1x.com/2022/10/18/xrbD1S.png" alt="xrbD1S.png" loading="lazy"></a><br>win+R快捷键打开“运行”窗口，输入cmd运行命令行控制台。输入以下内容，获取ip。</p>
<pre class="line-numbers language-none"><code class="language-none">ping http://xxx.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>选择新手引导，将域名填入框内。</p>
<p><a href="https://imgse.com/i/xrbsXQ"><img src="https://s1.ax1x.com/2022/10/18/xrbsXQ.png" alt="xrbsXQ.png" loading="lazy"></a></p>
<p>解析后在hexo根目录新建CNAME文件，并将域名写入。</p>
<p><a href="https://imgse.com/i/xrbc0s"><img src="https://s1.ax1x.com/2022/10/18/xrbc0s.png" alt="xrbc0s.png" loading="lazy"></a></p>
<p>进入github仓库，修改Custom domain，填入你的域名。</p>
<p><a href="https://imgse.com/i/xrbg7n"><img src="https://s1.ax1x.com/2022/10/18/xrbg7n.png" alt="xrbg7n.png" loading="lazy"></a></p>
<p>最后在hexo配置文件里url后面的github地址改为你的域名</p>
<blockquote>
<p>到此，域名就与你的博客绑定上了，以后可以直接通过域名访问博客，当然别忘了给域名续费。</p>
</blockquote>
<h1 id="搜索引擎收录"><a href="#搜索引擎收录" class="headerlink" title="搜索引擎收录"></a>搜索引擎收录</h1><h2 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h2><blockquote>
<p>Sitemap 可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap 形式，就是XML 文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站。</p>
</blockquote>
<p>进入<a href="https://ziyuan.baidu.com/">百度站长平台</a></p>
<p>注册登录后选择用户中心——站点管理——添加网站</p>
<p>根据提示添加网址，并进行验证。</p>
<blockquote>
<p>最后验证有三种方式，网上大多推荐CNAME验证，经过本人多次实测验证通过率并不高，因此推荐使用html验证。添加网址时注意区分http和https。</p>
</blockquote>
<p>安装sitemap插件，在hexo根目录下执行以下命令：</p>
<pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-sitemap --save     
npm install hexo-generator-baidu-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>之后执行</p>
<pre class="line-numbers language-none"><code class="language-none">hexo clean
hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>在public下多出了baidusitemap.xml、sitemap.xml文件，之后进入百度站点管理-站点属性-普通收录–sitemap<br><a href="https://imgse.com/i/xrbWt0"><img src="https://s1.ax1x.com/2022/10/18/xrbWt0.png" alt="xrbWt0.png" loading="lazy"></a><br>将自己的域名提交上去，但等待时间比较长，后面可以百度：site：你的域名 查看是否被百度收录。</p>
<h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><p>谷歌收录比较简单，登录<a href="https://developers.google.com/search">谷歌站长平台</a>，添加自己的域名,进行验证（这里推荐使用CNAME）<br><a href="https://imgse.com/i/xrbfhV"><img src="https://s1.ax1x.com/2022/10/18/xrbfhV.png" alt="xrbfhV.png" loading="lazy"></a></p>
<p>再到谷歌的Search Console，添加自己的sitemap地址<br><a href="https://imgse.com/i/xrbIcF"><img src="https://s1.ax1x.com/2022/10/18/xrbIcF.png" alt="xrbIcF.png" loading="lazy"></a></p>
<p>然后等待，和百度一样，可以谷歌：site:你的域名 进行查询是否被收录</p>
<h1 id="改短链接"><a href="#改短链接" class="headerlink" title="改短链接"></a>改短链接</h1><blockquote>
<p>一般来说，SEO搜索引擎优化认为，网站的最佳结构是 用户从首页点击三次就可以到达任何一个页面，但是我们使用Hexo编译的站点结构的URL是：域名/年/月/日/文章标题四层的结构，这样的URL结构很不利于SEO，爬虫就会经常爬不到我们的文章，于是，我们需要优化一下网站文章的URL</p>
</blockquote>
<ul>
<li>安装hexo-addrlink<pre class="line-numbers language-none"><code class="language-none">npm install hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>hexo配置文件加入以下配置：<pre class="line-numbers language-none"><code class="language-none"># hexo-abbrlink config 、固定文章地址插件
abbrlink:
  alg: crc16  #算法选项：crc16、crc32，区别见之前的文章，这里默认为crc16丨crc32比crc16复杂一点，长一点
  rep: dec    #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
在配置文件中找到permalink，修改成下面样式：<pre class="line-numbers language-none"><code class="language-none"># URL
## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'
url: https://blog.sky03.cn
root: /
permalink: posts/:abbrlink.html
permalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
<li>这样站点结构就变成了：域名/posts/xxx.html</li>
</ul>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>利用hexo自建博客指南</title>
    <url>/posts/58460.html</url>
    <content><![CDATA[<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>博客是一种记录生活和分享知识的个人网站，现在主流的博客框架主要有以下几个:</p>
</blockquote>
<ul>
<li>Hexo:Hexo是部署在Github、Gitee等代码管托网站上的静态网页，因为不需要服务器等额外费用，搭建成本极小，服务器非常稳定，但比起其他几个动态博客，搭建部署和文章发布比较复杂，自定义程度有限，需要一定的前端基础，且访问速度较慢。</li>
<li>Hugo:   与hexo相比搭建比较简单，Markdown渲染非常快，但社区相对较小。</li>
<li>Tyoecho：轻量级的博客框架，用的人比较多，对服务器要求比较小，不用配置本地文件，搭建和部署比较简单。但更新较慢，扩展性有限，适合不喜欢花里胡哨功能的用户。</li>
<li>Halo：用Java搭建的框架，利用Docker部署博客非常方便，社区比较活跃，但对服务器要求比较高。</li>
<li>Wordpress：用户最多的框架，博客只是其领域之一，全球有超过34.7%的网站（包括白宫官网）使用该框架搭建，优劣都非常明显：有着大量的用户社区，问题容易得到解决，有庞大的插件库，功能拓展性非常强，搭建和部署简单，但同时也非常臃肿，需要用户有一定的前后端基础和优化能力（搭建简单维护难），比较占用服务器资源，成本较高，适合商业用户和喜欢折腾的个人用户。  </li>
</ul>
<blockquote>
<p>除了hexo外，其他框架均以动态网页为主，需要一定的服务器成本，因此本文主要以hexo的搭建为主。</p>
</blockquote>
<h2 id="搭建nodejs和git环境"><a href="#搭建nodejs和git环境" class="headerlink" title="搭建nodejs和git环境"></a>搭建nodejs和git环境</h2><ul>
<li>nodejs下载：<a href="https://nodejs.org/en/download/">官网下载</a></li>
<li>git下载：<a href="https://git-scm.com/downloads">官网下载</a>，<a href="https://npm.taobao.org/mirrors/gitforwindows/v2.22.0.windows.1/Git2.22.0-64-bit.exe">国内镜像下载</a></li>
</ul>
<h2 id="注册github以及建立仓库"><a href="#注册github以及建立仓库" class="headerlink" title="注册github以及建立仓库"></a>注册github以及建立仓库</h2><blockquote>
<p>github注册很简单，主要是服务器问题，但在国内不搭梯子也能上去，多试几遍就行了，有条件肯定搭个梯子比较好。</p>
</blockquote>
<ul>
<li>注册： <a href="https://github.com/">github</a></li>
<li>仓库建立也比较简单，主要注意的是仓库名称，格式如下：xxx.github.io（xxx是你github的ID）</li>
</ul>
<h2 id="利用hexo搭建博客"><a href="#利用hexo搭建博客" class="headerlink" title="利用hexo搭建博客"></a>利用hexo搭建博客</h2><blockquote>
<p>这里主要介绍的是利用脚本快速搭建，还有其他搭建方法，这里就不细讲了。</p>
</blockquote>
<ul>
<li>建立一个本地存放博客文件的文件夹</li>
<li>右键git bush依次执行下面的命令：<pre class="line-numbers language-none"><code class="language-none">curl -O https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">source install.sh hexo_win<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<blockquote>
<p>当看到出现<code>Please run hexo s to check it out!</code>的提示,证明安装成功,此时执行以下命令：</p>
</blockquote>
<pre class="line-numbers language-none"><code class="language-none">cd hexoblog  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>此时可以看到一段地址：<a href="http://localhost:4000/">http://localhost:4000</a>, 这时在在浏览器打开就可以本地浏览了。</li>
</ul>
<h2 id="生成SSH密匙"><a href="#生成SSH密匙" class="headerlink" title="生成SSH密匙"></a>生成SSH密匙</h2><ul>
<li>在存放install.sh脚本的目录中,右键打开git bash运行以下命令:<pre class="line-numbers language-none"><code class="language-none">./install.sh git_ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>此时可以看到会有四条可执行命令,输入对应数字可以执行对应的命令：</li>
</ul>
<blockquote>
<p>1.Key  (执行1后可以一键生成秘钥如果你的电脑已经存在秘钥,程序将会自动退出)<br>2.SSH(SSH 执行2后可以查看你电脑中已生成的秘钥)<br>3.Verify-github(Verify-github 执行3后可以检查秘钥是否配置github成功)<br>4.Verify-coding(Verify-coding 执行4后可以检查秘钥是否配置coding成功)</p>
</blockquote>
<h2 id="部署hexo博客"><a href="#部署hexo博客" class="headerlink" title="部署hexo博客"></a>部署hexo博客</h2><ul>
<li>首先你需要打开根目录配置文件_config.yml  </li>
<li>找到deploy,它一般在最后一行,按照以下的格式修改即可</li>
</ul>
<blockquote>
<p>deploy:<br> type: git<br> repo:这里填仓库地址，建议使用ssh地址<br> branch：main</p>
</blockquote>
<ul>
<li><p>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p>
<pre class="line-numbers language-none"><code class="language-none">source install.sh deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>然后会在该目录生成一个up.sh文件，将up.sh复制到hexoblog文件,也就是复制到你的博客根目录下</p>
</li>
<li><p>然后在博客根目录执行以下命令：</p>
<pre class="line-numbers language-none"><code class="language-none">source up.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li><p>之后便可部署到你的github或者coding上，博客网址就是你的仓库名（xxx.github.io）</p>
</li>
<li><p>具体教程可看：<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">hexo-script使用文档</a></p>
</li>
</ul>
<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><ul>
<li>这里以fluid主题为例，其他主体安装大同小异</li>
<li>在博客根目录执行以下命令：<pre class="line-numbers language-none"><code class="language-none">npm install --save hexo-theme-fluid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
<li>主题安装好后，然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml 内容复制进去。</li>
<li>打开博客的配置文件 _config.yml ，找到theme，将其改成theme:fluid</li>
<li>这时主题就安装好了，博客框架已经建好<br>其他主题配置可以看主题文档：<a href="https://hexo.fluid-dev.com/docs/guide/">Fluid官方文档</a></li>
</ul>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="其他工具下载地址："><a href="#其他工具下载地址：" class="headerlink" title="其他工具下载地址："></a>其他工具下载地址：</h2><ul>
<li>vscode作为一款免费的编辑软件，功能非常强大，自定义程度高，可用于编写markdown和修改配置文件：<a href="https://code.visualstudio.com/">Vscode官网下载</a></li>
</ul>
<h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://blog.csdn.net/qq_43285335/article/details/90696126">nodejs下载安装及配置环境</a><br><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">git搭建教程</a><br><a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html">使用ssh密匙连接github</a><br><a href="https://hexo.fluid-dev.com/docs/guide/">Fluid官方文档</a><br><a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">hexo-script使用文档</a>  </p>
<h2 id="进阶文章："><a href="#进阶文章：" class="headerlink" title="进阶文章："></a>进阶文章：</h2><p><a href="https://whck.cc/posts/27040.html">hexo博客优化</a></p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
